OUT
OUT = ship
apply(OUT, 2, sum, na.rm=T)
towrite = c(prob.shore, prob.ship, prob.est, nstops, prob.surv, prob.det, prob.sdet, apply(OUT, 2, sum, na.rm=T))
towrite
colnames(output) = c("prob.shore", "prob.ship", "prob.est", "nstops", "prob.surv", "prob.det", "prob.sdet")
colnames(towrite) = c("prob.shore", "prob.ship", "prob.est", "nstops", "prob.surv", "prob.det", "prob.sdet")
towrite
#iterate over unique combinations of parameter values, replicating reps number of times
output = NULL
output = rbind(output, towrite)
colnames(output) = c("prob.shore","prob.ship","prob.est","nstops","prob.surv","prob.det","prob.sdet","containers","shore","shorestop","rmshore","transfer","rmtrans","dieroute","establish")
output
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/maritime invasion/")
#parameters and values
prob.shore.P  = seq(0,1,0.1)       #probability of of container getting to shore
prob.ship.P   = seq(0,1,0.1)       #probability of of container getting transfered to another ship
prob.est.P    = seq(0.5,1,0.1)     #probabiility that mozzies establish in new location (once container is on shore)--Kramer study?
nstops.P      = seq(1,10,10)       #number of stops on route between picking up mozzie and reaching destination port
prob.surv.P   = seq(0.8,1,0.1)     #probability of enough mozzies surviving; this is applied between each port
prob.det.P    = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on land
prob.sdet.P   = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on ship
#model run management
reps       = 1    #number of replicate runs
contains   = 100  #number of containers per ship
parameters = expand.grid(prob.shore.P, prob.ship.P, prob.est, nstops.P, prob.surv.P, prob.det.P, prob.sdet.P)
colnames(parameters) = c("prob.shore", "prob.ship", "prob.est", "nstops", "prob.surv", "prob.det", "prob.sdet")
#iterate over unique combinations of parameter values, replicating reps number of times
output = NULL
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/maritime invasion/")
#parameters and values
prob.shore.P  = seq(0,1,0.1)       #probability of of container getting to shore
prob.ship.P   = seq(0,1,0.1)       #probability of of container getting transfered to another ship
prob.est.P    = seq(0.5,1,0.1)     #probabiility that mozzies establish in new location (once container is on shore)--Kramer study?
nstops.P      = seq(1,10,10)       #number of stops on route between picking up mozzie and reaching destination port
prob.surv.P   = seq(0.8,1,0.1)     #probability of enough mozzies surviving; this is applied between each port
prob.det.P    = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on land
prob.sdet.P   = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on ship
#model run management
reps       = 1    #number of replicate runs
contains   = 100  #number of containers per ship
parameters = expand.grid(prob.shore.P, prob.ship.P, prob.est, nstops.P, prob.surv.P, prob.det.P, prob.sdet.P)
parameters = expand.grid(prob.shore.P, prob.ship.P, prob.est.P, nstops.P, prob.surv.P, prob.det.P, prob.sdet.P)
colnames(parameters) = c("prob.shore", "prob.ship", "prob.est", "nstops", "prob.surv", "prob.det", "prob.sdet")
#iterate over unique combinations of parameter values, replicating reps number of times
output = NULL
for(p in 1:nrow(parameters)){
#get parameters for this set of runs
prob.shore = parameters$prob.shore[p]
prob.ship  = parameters$prob.ship[p]
prob.est   = parameters$prob.est[p]
nstops     = parameters$nstops[p]
prob.surv  = parameters$prob.surv[p]
prob.det   = parameters$prob.det[p]
prob.sdet  = parameters$prob.sdet[p]
#set temp output objects
OUT = NULL
for(r in 1:reps){
ship = data.frame(containers = rep(1,contains), shore=rep(0,contains), shorestop=rep(0,contains), rmshore=rep(0,contains),
transfer=rep(0,contains), rmtrans=rep(0,contains), dieroute=rep(0,contains), establish=rep(0,contains))
removed = NULL
for(n in 1:nstops){
#remove mozzies that died in transit
ship$dieroute = sample(c(1,0), nrow(ship), prob=c(1-prob.surv, prob.surv), replace=T)
dead    = ship[ship$dieroute==1,,drop=F]
if(nrow(dead)>0){dead$dieroute=n}
ship    = ship[ship$dieroute==0,,drop=F]
removed = rbind(removed, dead)
if(nrow(ship)<1){break}
#move containers to shore, update dataframe; find and move to shore noting the stop
ship$shore = sample(c(1,0), nrow(ship), prob=c(prob.shore, 1-prob.shore), replace=T)
toshore    = ship[ship$shore==1,,drop=F]
ship       = ship[ship$shore==0,,drop=F]
if(nrow(toshore)>0){toshore$shorestop = n}
#check shore container mozzies, check to see if established
toshore$rmshore = sample(c(1,0), nrow(toshore), prob=c(prob.det, 1-prob.det), replace=T)
toshore$establish[toshore$rmshore==0] = sample(c(1,0), length(toshore$establish[toshore$rmshore==0]), prob=c(prob.est, 1-prob.est), replace=T)
removed = rbind(removed, toshore)
if(nrow(ship)<1){break}
#move containers to new ship, update dataframe; find and move noting the stop
ship$transfer = sample(c(1,0), nrow(ship), prob=c(prob.ship, 1-prob.ship), replace=T)
toship        = ship[ship$transfer==1,,drop=F]
ship          = ship[ship$transfer==0,,drop=F]
if(nrow(toship)>0){toship$shorestop = n}
#check new ship container mozzies, see if establsihed
toship$rmtrans = sample(c(1,0), nrow(toship), prob=c(prob.sdet, 1-prob.sdet), replace=T)
toship$establish[toship$rmtrans==0] = sample(c(1,0), length(toship$establish[toship$rmtrans==0]), prob=c(prob.est, 1-prob.est), replace=T)
removed = rbind(removed, toship)
if(nrow(ship)<1){break}
}
OUT = rbind(ship, removed)
}
towrite = c(prob.shore, prob.ship, prob.est, nstops, prob.surv, prob.det, prob.sdet, apply(OUT, 2, sum, na.rm=T))
output = rbind(output, towrite)
}
colnames(output) = c("prob.shore","prob.ship","prob.est","nstops","prob.surv","prob.det","prob.sdet","containers","shore","shorestop","rmshore","transfer","rmtrans","dieroute","establish")
dim(output)
head(output)
directory = getwd()
outdir    = paste(directory,"/Output/", sep="")
write.table(output, paste(outdir,"outputsummary.csv", sep=""), append=F, sep=",", row.names=F, col.names=T)
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/maritime invasion/maritime_transport/")
directory = getwd()
outdir    = paste(directory,"/Output/", sep="")
write.table(output, paste(outdir,"outputsummary.csv", sep=""), append=F, sep=",", row.names=F, col.names=T)
folder = gsub(" ", "", paste("../Output/output_", Sys.time(), ""), fixed = TRUE)
dir.create(folder)
folder = gsub(" ", "", paste("../Output/output_", Sys.time(), ""), fixed = TRUE)
folder = gsub(" ", "", paste("/Output/output_", Sys.time(), ""), fixed = TRUE)
dir.create(folder)
getwd()
folder
folder = gsub(" ", "", paste("/Output/output_", Sys.time(), ""), fixed = TRUE)
dir.create(folder)
folder = gsub(" ", "", paste(getwd(), "/Output/output_", Sys.time(), ""), fixed = TRUE)
folder
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/maritime invasion/maritime_transport/")
folder = gsub(" ", "", paste("/Output/output_", Sys.time(), ""), fixed = TRUE)
outdir
dir.create(paste(outdir,folder,sep="")
)
folder = gsub(" ", "", paste("output_", Sys.time(), ""), fixed = TRUE)
dir.create(paste(outdir,folder,sep=""))
#copy output into folder to use later
data = read.table("/Output/outputsummary.csv", header=T, sep="")
getwd()
#copy output into folder to use later
data = read.table("Output/outputsummary.csv", header=T, sep="")
head(output)
write.table(output, paste(outdir,"outputsummary.csv", sep=""), append=F, sep=",", row.names=F, col.names=T)
#copy output into folder to use later
data = read.table("Output/outputsummary.csv", header=T, sep=",")
folder
paste("../Output/", folder, "/outputsummary.csv", sep="")
getwd()
write.table(data, paste("/Output/", folder, "/outputsummary.csv", sep=""), row.names=F, col.names=T, sep=",")
folder
write.table(data, "Output/output_2022-01-2112:27:13/outputsummary.csv", row.names=F, col.names=T, sep=",")
folder
gsub(":", "_", gsub(" ", "", paste("output_", Sys.time(), ""), fixed = TRUE), fixed = TRUE)
write.table(output, paste(outdir,"outputsummary.csv", sep=""), append=F, sep=",", row.names=F, col.names=T)
folder = gsub(":", "_", gsub(" ", "", paste("output_", Sys.time(), ""), fixed = TRUE), fixed = TRUE)
dir.create(paste(outdir,folder,sep=""))
#copy output into folder to use later
data = read.table("Output/outputsummary.csv", header=T, sep=",")
write.table(data, paste("/Output/", folder, "/outputsummary.csv", sep=""), row.names=F, col.names=T, sep=",")
write.table(data, paste("Output/", folder, "/outputsummary.csv", sep=""), row.names=F, col.names=T, sep=",")
head(data)
table(prob.shore)
table(prob.ship)
table(data$prob.shore)
table(data$prob.ship)
table(data$prob.est)
table(data$nstops)
table(data$nstops)
table(data$prob.surv)
table(data$prob.det)
table(data$prob.sdet)
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/eco-epi reivew/eco epi analysis/eco_epi/")
data = read.table("supplementary table 2.csv", header=T, sep=",")
#unique studies
length(unique(data$Reference.number))
####species/study site location breakdown
##taxonomy:
####1.number of different species and over represented species####
length(unique(data$Genus.species))
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/maritime invasion/maritime_transport/")
directory = getwd()
outdir    = paste(directory,"/Output/", sep="")
####model setup####
#parameters and values
prob.shore.P  = seq(0,1,0.1)       #probability of of container getting to shore
prob.ship.P   = seq(0,1,0.1)       #probability of of container getting transfered to another ship
prob.est.P    = seq(0.5,1,0.1)     #probabiility that mozzies establish in new location (once container is on shore)--Kramer study?
nstops.P      = seq(1,10,1)        #number of stops on route between picking up mozzie and reaching destination port
prob.surv.P   = seq(0.8,1,0.1)     #probability of enough mozzies surviving; this is applied between each port
prob.det.P    = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on land
prob.sdet.P   = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on ship
#model run management
reps       = 1    #number of replicate runs
contains   = 100  #number of containers per ship
parameters = expand.grid(prob.shore.P, prob.ship.P, prob.est.P, nstops.P, prob.surv.P, prob.det.P, prob.sdet.P)
colnames(parameters) = c("prob.shore", "prob.ship", "prob.est", "nstops", "prob.surv", "prob.det", "prob.sdet")
####run model####
#iterate over unique combinations of parameter values, replicating reps number of times
output = NULL
for(p in 1:nrow(parameters)){
#get parameters for this set of runs
prob.shore = parameters$prob.shore[p]
prob.ship  = parameters$prob.ship[p]
prob.est   = parameters$prob.est[p]
nstops     = parameters$nstops[p]
prob.surv  = parameters$prob.surv[p]
prob.det   = parameters$prob.det[p]
prob.sdet  = parameters$prob.sdet[p]
#set temp output objects
OUT = NULL
for(r in 1:reps){
ship = data.frame(containers = rep(1,contains), shore=rep(0,contains), shorestop=rep(0,contains), rmshore=rep(0,contains),
transfer=rep(0,contains), rmtrans=rep(0,contains), dieroute=rep(0,contains), establish=rep(0,contains))
removed = NULL
for(n in 1:nstops){
#remove mozzies that died in transit
ship$dieroute = sample(c(1,0), nrow(ship), prob=c(1-prob.surv, prob.surv), replace=T)
dead    = ship[ship$dieroute==1,,drop=F]
if(nrow(dead)>0){dead$dieroute=n}
ship    = ship[ship$dieroute==0,,drop=F]
removed = rbind(removed, dead)
if(nrow(ship)<1){break}
#move containers to shore, update dataframe; find and move to shore noting the stop
ship$shore = sample(c(1,0), nrow(ship), prob=c(prob.shore, 1-prob.shore), replace=T)
toshore    = ship[ship$shore==1,,drop=F]
ship       = ship[ship$shore==0,,drop=F]
if(nrow(toshore)>0){toshore$shorestop = n}
#check shore container mozzies, check to see if established
toshore$rmshore = sample(c(1,0), nrow(toshore), prob=c(prob.det, 1-prob.det), replace=T)
toshore$establish[toshore$rmshore==0] = sample(c(1,0), length(toshore$establish[toshore$rmshore==0]), prob=c(prob.est, 1-prob.est), replace=T)
removed = rbind(removed, toshore)
if(nrow(ship)<1){break}
#move containers to new ship, update dataframe; find and move noting the stop
ship$transfer = sample(c(1,0), nrow(ship), prob=c(prob.ship, 1-prob.ship), replace=T)
toship        = ship[ship$transfer==1,,drop=F]
ship          = ship[ship$transfer==0,,drop=F]
if(nrow(toship)>0){toship$shorestop = n}
#check new ship container mozzies, see if establsihed
toship$rmtrans = sample(c(1,0), nrow(toship), prob=c(prob.sdet, 1-prob.sdet), replace=T)
toship$establish[toship$rmtrans==0] = sample(c(1,0), length(toship$establish[toship$rmtrans==0]), prob=c(prob.est, 1-prob.est), replace=T)
removed = rbind(removed, toship)
if(nrow(ship)<1){break}
}
OUT = rbind(ship, removed)
}
towrite = c(prob.shore, prob.ship, prob.est, nstops, prob.surv, prob.det, prob.sdet, apply(OUT, 2, sum, na.rm=T))
output = rbind(output, towrite)
}
p
dim(OUT)
ship
removed
dim(removed)
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/maritime invasion/maritime_transport/")
directory = getwd()
outdir    = paste(directory,"/Output/", sep="")
####model setup####
#parameters and values
prob.shore.P  = 0.5#seq(0,1,0.1)       #probability of of container getting to shore
prob.ship.P   = 0.5#seq(0,1,0.1)       #probability of of container getting transfered to another ship
prob.est.P    = 0.5#seq(0.5,1,0.1)     #probabiility that mozzies establish in new location (once container is on shore)--Kramer study?
nstops.P      = seq(1,10,1)        #number of stops on route between picking up mozzie and reaching destination port
prob.surv.P   = 0.9#seq(0.8,1,0.1)     #probability of enough mozzies surviving; this is applied between each port
prob.det.P    = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on land
prob.sdet.P   = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on ship
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/maritime invasion/maritime_transport/")
directory = getwd()
outdir    = paste(directory,"/Output/", sep="")
####model setup####
#parameters and values
prob.shore.P  = 0.5#seq(0,1,0.1)       #probability of of container getting to shore
prob.ship.P   = 0.5#seq(0,1,0.1)       #probability of of container getting transfered to another ship
prob.est.P    = 0.5#seq(0.5,1,0.1)     #probabiility that mozzies establish in new location (once container is on shore)--Kramer study?
nstops.P      = seq(1,10,1)        #number of stops on route between picking up mozzie and reaching destination port
prob.surv.P   = 0.9#seq(0.8,1,0.1)     #probability of enough mozzies surviving; this is applied between each port
prob.det.P    = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on land
prob.sdet.P   = seq(0,1,0.2)       #probability of detecting and removing mosquitos from container on ship
#model run management
reps       = 1    #number of replicate runs
contains   = 100  #number of containers per ship
parameters = expand.grid(prob.shore.P, prob.ship.P, prob.est.P, nstops.P, prob.surv.P, prob.det.P, prob.sdet.P)
colnames(parameters) = c("prob.shore", "prob.ship", "prob.est", "nstops", "prob.surv", "prob.det", "prob.sdet")
####run model####
#iterate over unique combinations of parameter values, replicating reps number of times
output = NULL
for(p in 1:nrow(parameters)){
#get parameters for this set of runs
prob.shore = parameters$prob.shore[p]
prob.ship  = parameters$prob.ship[p]
prob.est   = parameters$prob.est[p]
nstops     = parameters$nstops[p]
prob.surv  = parameters$prob.surv[p]
prob.det   = parameters$prob.det[p]
prob.sdet  = parameters$prob.sdet[p]
for(r in 1:reps){
OUT = NULL
ship = data.frame(containers = rep(1,contains), shore=rep(0,contains), shorestop=rep(0,contains), rmshore=rep(0,contains),
transfer=rep(0,contains), rmtrans=rep(0,contains), dieroute=rep(0,contains), establish=rep(0,contains))
removed = NULL
for(n in 1:nstops){
#remove mozzies that died in transit
ship$dieroute = sample(c(1,0), nrow(ship), prob=c(1-prob.surv, prob.surv), replace=T)
dead    = ship[ship$dieroute==1,,drop=F]
if(nrow(dead)>0){dead$dieroute=n}
ship    = ship[ship$dieroute==0,,drop=F]
removed = rbind(removed, dead)
if(nrow(ship)<1){break}
#move containers to shore, update dataframe; find and move to shore noting the stop
ship$shore = sample(c(1,0), nrow(ship), prob=c(prob.shore, 1-prob.shore), replace=T)
toshore    = ship[ship$shore==1,,drop=F]
ship       = ship[ship$shore==0,,drop=F]
if(nrow(toshore)>0){toshore$shorestop = n}
#check shore container mozzies, check to see if established
toshore$rmshore = sample(c(1,0), nrow(toshore), prob=c(prob.det, 1-prob.det), replace=T)
toshore$establish[toshore$rmshore==0] = sample(c(1,0), length(toshore$establish[toshore$rmshore==0]), prob=c(prob.est, 1-prob.est), replace=T)
removed = rbind(removed, toshore)
if(nrow(ship)<1){break}
#move containers to new ship, update dataframe; find and move noting the stop
ship$transfer = sample(c(1,0), nrow(ship), prob=c(prob.ship, 1-prob.ship), replace=T)
toship        = ship[ship$transfer==1,,drop=F]
ship          = ship[ship$transfer==0,,drop=F]
if(nrow(toship)>0){toship$shorestop = n}
#check new ship container mozzies, see if establsihed
toship$rmtrans = sample(c(1,0), nrow(toship), prob=c(prob.sdet, 1-prob.sdet), replace=T)
toship$establish[toship$rmtrans==0] = sample(c(1,0), length(toship$establish[toship$rmtrans==0]), prob=c(prob.est, 1-prob.est), replace=T)
removed = rbind(removed, toship)
if(nrow(ship)<1){break}
}
OUT = rbind(ship, removed)
towrite = c(prob.shore, prob.ship, prob.est, nstops, prob.surv, prob.det, prob.sdet, apply(OUT, 2, sum, na.rm=T))
output = rbind(output, towrite)
}
}
####copy and save data####
colnames(output) = c("prob.shore","prob.ship","prob.est","nstops","prob.surv","prob.det","prob.sdet","containers","shore","shorestop","rmshore","transfer","rmtrans","dieroute","establish")
write.table(output, paste(outdir,"outputsummary.csv", sep=""), append=F, sep=",", row.names=F, col.names=T)
folder = gsub(":", "_", gsub(" ", "", paste("output_", Sys.time(), ""), fixed = TRUE), fixed = TRUE)
dir.create(paste(outdir,folder,sep=""))
#copy output into folder to use later
data = read.table("Output/outputsummary.csv", header=T, sep=",")
write.table(data, paste("Output/", folder, "/outputsummary.csv", sep=""), row.names=F, col.names=T, sep=",")
v=0.5
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==v & data$nstops==5 & data$prob.surv==0.9, ]
pdf(paste("Output/", folder, "/landdet_est", v, ".pdf", sep=""), width = 0.5, height = 0.5)
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing mosquitos from container)", ylab="percent of containers with established mosquito populations")
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing mosquitos from container)", ylab="established mosquito populations (%)")
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing)", ylab="established populations (%)")
dev.off()
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing)", ylab="established populations (%)")
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
i=0
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==v & data$nstops==5 & data$prob.surv==0.9, ]
View(t)
tt = t[t$prob.det==i,]
tt
tt = t[t$prob.sdet==i,]
tt
i=1
tt = t[t$prob.sdet==prob.det.P[i],]
lines(x=tt$prob.det, y=tt$establish/100, lwd=1, col=colors6[i])
lines(x=tt$prob.det, y=tt$establish/100, lwd=2, col=colors6[i])
points(x=tt$prob.det, y=tt$establish/100, pch=19, col=colors6[i])
for(i in 1:length(prob.det.P)){
tt = t[t$prob.sdet==prob.det.P[i],]
lines(x=tt$prob.det, y=tt$establish/100, lwd=2, col=colors6[i])
points(x=tt$prob.det, y=tt$establish/100, pch=19, col=colors6[i])
}
pdf(paste("Output/", folder, "/landdet_est", v, ".pdf", sep=""), width = 0.5, height = 0.5)
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing)", ylab="established populations (%)")
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
for(i in 1:length(prob.det.P)){
tt = t[t$prob.sdet==prob.det.P[i],]
lines(x=tt$prob.det, y=tt$establish/100, lwd=2, col=colors6[i])
points(x=tt$prob.det, y=tt$establish/100, pch=19, col=colors6[i])
}
dev.off()
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==v & data$nstops==5 & data$prob.surv==0.9, ]
pdf(paste("Output/", folder, "/landdet_est", v, ".pdf", sep=""), width = 0.5, height = 0.5)
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing)", ylab="established populations (%)")
dev.off()
pdf(paste("Output/", folder, "/landdet_est", v, ".pdf", sep=""), width = 5, height = 5)
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing)", ylab="established populations (%)")
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
for(i in 1:length(prob.det.P)){
tt = t[t$prob.sdet==prob.det.P[i],]
lines(x=tt$prob.det, y=tt$establish/100, lwd=2, col=colors6[i])
points(x=tt$prob.det, y=tt$establish/100, pch=19, col=colors6[i])
}
dev.off()
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
####analyze model outpu####
#1. how much does change in land detection influence establishment?
for(v in 1:length(prob.sdet.P)){
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
pdf(paste("Output/", folder, "/landdet_est", prob.sdet.P[v], ".pdf", sep=""), width = 5, height = 5)
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
for(i in 1:length(prob.det.P)){
tt = t[t$prob.sdet==prob.det.P[i],]
lines(x=tt$prob.det, y=tt$establish/100, lwd=2, col=colors6[i])
points(x=tt$prob.det, y=tt$establish/100, pch=19, col=colors6[i])
}
dev.off()
}
prob.sdet.P
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
t
head(data)
data$prob.sdet
v=1
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
t
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$nstops==5 & data$prob.surv==0.9, ]
t
####analyze model outpu####
#1. how much does change in land detection influence establishment?
for(v in 1:length(prob.sdet.P)){
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est=0.5, prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
pdf(paste("Output/", folder, "/landdet_est", prob.sdet.P[v], ".pdf", sep=""), width = 5, height = 5)
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
for(i in 1:length(prob.det.P)){
tt = t[t$prob.sdet==prob.det.P[i],]
lines(x=tt$prob.det, y=tt$establish/100, lwd=2, col=colors6[i])
points(x=tt$prob.det, y=tt$establish/100, pch=19, col=colors6[i])
}
dev.off()
}
dev.off()
####analyze model outpu####
#1. how much does change in land detection influence establishment?
for(v in 1:length(prob.sdet.P)){
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est=0.5 & prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
pdf(paste("Output/", folder, "/landdet_est", prob.sdet.P[v], ".pdf", sep=""), width = 5, height = 5)
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
for(i in 1:length(prob.det.P)){
tt = t[t$prob.sdet==prob.det.P[i],]
lines(x=tt$prob.det, y=tt$establish/100, lwd=2, col=colors6[i])
points(x=tt$prob.det, y=tt$establish/100, pch=19, col=colors6[i])
}
dev.off()
}
####analyze model outpu####
#1. how much does change in land detection influence establishment?
for(v in 1:length(prob.sdet.P)){
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est=0.5 & prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
pdf(paste("Output/", folder, "/landdet_est", prob.sdet.P[v], ".pdf", sep=""), width = 5, height = 5)
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
for(i in 1:length(prob.det.P)){
tt = t[t$prob.sdet==prob.det.P[i],]
lines(x=tt$prob.det, y=tt$establish/100, lwd=2, col=colors6[i])
points(x=tt$prob.det, y=tt$establish/100, pch=19, col=colors6[i])
}
dev.off()
}
v=1
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est=0.5 & prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est=0.5 & data$prob.sdet==prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==0.5 & data$prob.sdet==prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
####analyze model outpu####
#1. how much does change in land detection influence establishment?
for(v in 1:length(prob.sdet.P)){
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==0.5 & data$prob.sdet==prob.sdet.P[v] & data$nstops==5 & data$prob.surv==0.9, ]
pdf(paste("Output/", folder, "/landdet_est", prob.sdet.P[v], ".pdf", sep=""), width = 5, height = 5)
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
for(i in 1:length(prob.det.P)){
tt = t[t$prob.sdet==prob.det.P[i],]
lines(x=tt$prob.det, y=tt$establish/100, lwd=2, col=colors6[i])
points(x=tt$prob.det, y=tt$establish/100, pch=19, col=colors6[i])
}
dev.off()
}
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==0.5 & data$nstops==5 & data$prob.surv==0.9, ]
unique(data$prob.sdet)
v=1
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==0.5 & data$nstops==5 & data$prob.surv==0.9 & data$prob.sdet==prob.sdet.P[v], ]
t
pdf(paste("Output/", folder, "/landdet_est", prob.sdet.P[v], ".pdf", sep=""), width = 5, height = 5)
dev.off()
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
lines(x=t$prob.det, y=t$establish/100, lwd=2, col=colors6[i])
points(x=t$prob.det, y=t$establish/100, pch=19, col=colors6[i])
v
####analyze model outpu####
colors6 = rev("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
colors6 = rev(colors6)
lines(x=t$prob.det, y=t$establish/100, lwd=2, col=colors6[i])
points(x=t$prob.det, y=t$establish/100, pch=19, col=colors6[i])
v
prob.sdet.P[v]
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
for(v in 1:length(prob.sdet.P)){
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==0.5 & data$nstops==5 & data$prob.surv==0.9 & data$prob.sdet==prob.sdet.P[v], ]
lines(x=t$prob.det, y=t$establish/100, lwd=2, col=colors6[i])
points(x=t$prob.det, y=t$establish/100, pch=19, col=colors6[i])
}
v
colors6
v
colors[6]
colors6[6]
colors6[1]
v
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
lines(x=t$prob.det, y=t$establish/100, lwd=2, col=colors6[v])
points(x=t$prob.det, y=t$establish/100, pch=19, col=colors6[v])
colors6 = rev(colors6)
####analyze model outpu####
colors6 = c("#d3f2a3","#97e196","#6cc08b","#4c9b82","#217a79","#074050") ##105965 <-extra color, second to last
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from unloaded containers)", ylab="established populations (%)")
for(v in 1:length(prob.sdet.P)){
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==0.5 & data$nstops==5 & data$prob.surv==0.9 & data$prob.sdet==prob.sdet.P[v], ]
lines(x=t$prob.det, y=t$establish/100, lwd=2, col=colors6[v])
points(x=t$prob.det, y=t$establish/100, pch=19, col=colors6[v])
}
plot(-100,-100, xlim=c(0,1), ylim=c(0,1), xlab="P(removing from onboard containers)", ylab="established populations (%)")
for(v in 1:length(prob.det.P)){
t = data[data$prob.shore==0.5 & data$prob.ship==0.5 & data$prob.est==0.5 & data$nstops==5 & data$prob.surv==0.9 & data$prob.det==prob.det.P[v], ]
lines(x=t$prob.sdet, y=t$establish/100, lwd=2, col=colors6[v])
points(x=t$prob.sdet, y=t$establish/100, pch=19, col=colors6[v])
}
